<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on DefinIT</title><link>https://www.definit.co.uk/tag/python/</link><description>Recent content in python on DefinIT</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 04 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.definit.co.uk/tag/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Code Stream - Custom Integration - Generate Basic Authentication Header</title><link>https://www.definit.co.uk/2020/11/code-stream-custom-integration-generate-basic-authentication-header/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.definit.co.uk/2020/11/code-stream-custom-integration-generate-basic-authentication-header/</guid><description>To generate a basic authentication header from a username and password in Code Stream you could use a CI task and execute echo -n username:password | base64 in the shell then export the result for use later on. A more repeatable way is to create a Custom Integration that takes the two inputs, and returns the encoded header as an output.
To create the Custom Integration:
Create a new Custom Integration named &amp;ldquo;Create Basic Authentication Header&amp;rdquo; Select the Runtime - the examples below are shell and python3 respectively Replace the placeholder code with the example from below Save and version the Custom Integration, ensuring you eanble the &amp;ldquo;Release Version&amp;rdquo; toggle Creating the Custom Integration To use the Custom Integration in a pipeline:</description></item><item><title>Code Stream - Custom Integration - Generate Basic Authentication Header</title><link>https://www.definit.co.uk/2020/11/code-stream-custom-integration-generate-basic-authentication-header/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.definit.co.uk/2020/11/code-stream-custom-integration-generate-basic-authentication-header/</guid><description>To generate a basic authentication header from a username and password in Code Stream you could use a CI task and execute echo -n username:password | base64 in the shell then export the result for use later on. A more repeatable way is to create a Custom Integration that takes the two inputs, and returns the encoded header as an output.
To create the Custom Integration:
Create a new Custom Integration named &amp;ldquo;Create Basic Authentication Header&amp;rdquo; Select the Runtime - the examples below are shell and python3 respectively Replace the placeholder code with the example from below Save and version the Custom Integration, ensuring you eanble the &amp;ldquo;Release Version&amp;rdquo; toggle Creating the Custom Integration To use the Custom Integration in a pipeline:</description></item><item><title>Monitoring temperature and humidity with a Raspberry Pi 3, DHT22 sensor, InfluxDB and Grafana</title><link>https://www.definit.co.uk/2018/07/monitoring-temperature-and-humidity-with-a-raspberry-pi-3-dht22-sensor-influxdb-and-grafana/</link><pubDate>Tue, 24 Jul 2018 13:52:18 +0000</pubDate><guid>https://www.definit.co.uk/2018/07/monitoring-temperature-and-humidity-with-a-raspberry-pi-3-dht22-sensor-influxdb-and-grafana/</guid><description>I recently started looking into ways of monitoring the temperature and humidity in my garage - for two reasons. Firstly, I have my lab workload cluster out there in the form of a Dell C6100, and I&amp;rsquo;ve noticed with the recent weather that the temperature in there getsâ€¦a bit warm. Secondly, I like to brew beer at home, and one of the keys to a good brew is consistent temperature!</description></item></channel></rss>