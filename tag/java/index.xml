<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on DefinIT</title><link>https://www.definit.co.uk/tag/java/</link><description>Recent content in Java on DefinIT</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 05 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.definit.co.uk/tag/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Upgrading vRA with vRLCM and JAVA versions</title><link>https://www.definit.co.uk/2019/04/upgrading-vra-with-vrlcm-and-java-versions/</link><pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.definit.co.uk/2019/04/upgrading-vra-with-vrlcm-and-java-versions/</guid><description>I recently upgraded an instance of vRA from 7.2 to 7.5 and rather than do it the manual way I used VMware’s vRealize LifeCycle Manager (version 2.0 update 3).
Everything was going great and according to plan, the vRLCM pre-requisites checker made short work of all of the checks you need to do before you start an upgrade of vRA. You can see below vRLCM does a great job of keeping you informed of the current progress and in a really elegant way.</description></item><item><title>Upgrading vRA with vRLCM and JAVA versions</title><link>https://www.definit.co.uk/2019/04/upgrading-vra-with-vrlcm-and-java-versions/</link><pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.definit.co.uk/2019/04/upgrading-vra-with-vrlcm-and-java-versions/</guid><description>I recently upgraded an instance of vRA from 7.2 to 7.5 and rather than do it the manual way I used VMware’s vRealize LifeCycle Manager (version 2.0 update 3).
Everything was going great and according to plan, the vRLCM pre-requisites checker made short work of all of the checks you need to do before you start an upgrade of vRA. You can see below vRLCM does a great job of keeping you informed of the current progress and in a really elegant way.</description></item><item><title>Increasing the Java Heap size for vRealize Orchestrator Client (7.x)</title><link>https://www.definit.co.uk/2016/12/increasing-the-java-heap-size-for-vrealize-orchestrator-client-7-x/</link><pubDate>Fri, 16 Dec 2016 11:05:30 +0000</pubDate><guid>https://www.definit.co.uk/2016/12/increasing-the-java-heap-size-for-vrealize-orchestrator-client-7-x/</guid><description>Back in January 2015 I wrote an article on how to modify the Java heap settings for the vCenter Orchestrator client when working with very large workflows. Since vRealize Orchestrator 7.x has been released, we no longer have an installable client, just a Java WebStart file (.jnlp) that you run, or a package that you can download - but nothing that installs.
Note that none of this is official or supported by VMware as far as I know - it&amp;rsquo;s the results of my experimentation which has shown some performance improvement by increasing the configured memory pool.</description></item><item><title>Performance tweak – increasing Max Heap Size for the vRealize Orchestrator (vRO/vCO) Client</title><link>https://www.definit.co.uk/2015/01/performance-tweak-increasing-max-heap-size-for-the-vrealize-orchestrator-vrovco-client/</link><pubDate>Thu, 15 Jan 2015 20:13:17 +0000</pubDate><guid>https://www.definit.co.uk/2015/01/performance-tweak-increasing-max-heap-size-for-the-vrealize-orchestrator-vrovco-client/</guid><description>[Update Dec 2016: An updated article for vRO 7.x is available here]
I&amp;rsquo;m developing some very large, very complicated workflows for vRealize Orchestrator (vRO/vCO), and as it&amp;rsquo;s a Java based application it will probably come as no surprise to many that the performance of the client drops off sharply as the client&amp;rsquo;s RAM usage creeps up.
When working on some of the larger workflows, or after long sessions and heavy clipboard use, the client would become (even more) sluggish and in some cases would freeze entirely.</description></item></channel></rss>