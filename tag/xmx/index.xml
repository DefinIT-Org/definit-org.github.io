<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>xmx on DefinIT</title><link>https://www.definit.co.uk/tag/xmx/</link><description>Recent content in xmx on DefinIT</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 16 Dec 2016 11:05:30 +0000</lastBuildDate><atom:link href="https://www.definit.co.uk/tag/xmx/index.xml" rel="self" type="application/rss+xml"/><item><title>Increasing the Java Heap size for vRealize Orchestrator Client (7.x)</title><link>https://www.definit.co.uk/2016/12/increasing-the-java-heap-size-for-vrealize-orchestrator-client-7-x/</link><pubDate>Fri, 16 Dec 2016 11:05:30 +0000</pubDate><guid>https://www.definit.co.uk/2016/12/increasing-the-java-heap-size-for-vrealize-orchestrator-client-7-x/</guid><description>Back in January 2015 I wrote an article on how to modify the Java heap settings for the vCenter Orchestrator client when working with very large workflows. Since vRealize Orchestrator 7.x has been released, we no longer have an installable client, just a Java WebStart file (.jnlp) that you run, or a package that you can download - but nothing that installs.
Note that none of this is official or supported by VMware as far as I know - it&amp;rsquo;s the results of my experimentation which has shown some performance improvement by increasing the configured memory pool.</description></item></channel></rss>