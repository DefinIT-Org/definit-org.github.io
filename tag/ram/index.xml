<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RAM on DefinIT</title><link>https://www.definit.co.uk/tag/ram/</link><description>Recent content in RAM on DefinIT</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 15 Jan 2015 20:13:17 +0000</lastBuildDate><atom:link href="https://www.definit.co.uk/tag/ram/index.xml" rel="self" type="application/rss+xml"/><item><title>Performance tweak â€“ increasing Max Heap Size for the vRealize Orchestrator (vRO/vCO) Client</title><link>https://www.definit.co.uk/2015/01/performance-tweak-increasing-max-heap-size-for-the-vrealize-orchestrator-vrovco-client/</link><pubDate>Thu, 15 Jan 2015 20:13:17 +0000</pubDate><guid>https://www.definit.co.uk/2015/01/performance-tweak-increasing-max-heap-size-for-the-vrealize-orchestrator-vrovco-client/</guid><description>[Update Dec 2016: An updated article for vRO 7.x is available here]
I&amp;rsquo;m developing some very large, very complicated workflows for vRealize Orchestrator (vRO/vCO), and as it&amp;rsquo;s a Java based application it will probably come as no surprise to many that the performance of the client drops off sharply as the client&amp;rsquo;s RAM usage creeps up.
When working on some of the larger workflows, or after long sessions and heavy clipboard use, the client would become (even more) sluggish and in some cases would freeze entirely.</description></item></channel></rss>