<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>REST on DefinIT</title><link>https://www.definit.co.uk/tag/rest/</link><description>Recent content in REST on DefinIT</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 04 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.definit.co.uk/tag/rest/index.xml" rel="self" type="application/rss+xml"/><item><title>Code Stream - Custom Integration - Generate Basic Authentication Header</title><link>https://www.definit.co.uk/2020/11/code-stream-custom-integration-generate-basic-authentication-header/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.definit.co.uk/2020/11/code-stream-custom-integration-generate-basic-authentication-header/</guid><description>To generate a basic authentication header from a username and password in Code Stream you could use a CI task and execute echo -n username:password | base64 in the shell then export the result for use later on. A more repeatable way is to create a Custom Integration that takes the two inputs, and returns the encoded header as an output.
To create the Custom Integration:
Create a new Custom Integration named &amp;ldquo;Create Basic Authentication Header&amp;rdquo; Select the Runtime - the examples below are shell and python3 respectively Replace the placeholder code with the example from below Save and version the Custom Integration, ensuring you eanble the &amp;ldquo;Release Version&amp;rdquo; toggle Creating the Custom Integration To use the Custom Integration in a pipeline:</description></item><item><title>vRealize Orchestrator REST API â€“ "Connection pool shut down"</title><link>https://www.definit.co.uk/2015/12/vrealize-orchestrator-rest-api-connection-pool-shut-down/</link><pubDate>Tue, 01 Dec 2015 17:29:10 +0000</pubDate><guid>https://www.definit.co.uk/2015/12/vrealize-orchestrator-rest-api-connection-pool-shut-down/</guid><description>If you use the in-built vRealize Orchestrator instance shipped with the vRealize Automation appliance then you might run into this issue when working with the REST client:
Connection pool shut down (Workflow:Get-IdentityToken / Scripting (item3)#14)
The vRA appliance version I have (6.2 - note to self, need to update lab!) includes the plugin version 1.0.4 for REST. According to the release notes, this was fixed in 1.0.5 - typical!</description></item></channel></rss>